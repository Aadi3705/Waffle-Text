OCP review topics

Chapter 1:
-understand the definition of primitive and reference types even more?
-understanding passing parameters inside of a java program(args[0] and args[1]
-learn about incidental whitespace and quotes escape character
-review what scope is one more time, and applying it to variables
-learn garbage collection, the heap, and stack




Chapter 2:
-master every Numeric Promotion, learn about datatype ia aboce another and what fits into what
-the order of precedence when it comes to operators, down to up is in increasing order.
-icrementing and decrementing unary operators
-the return value of numeric operators after numeric operation
-instanceOf operators and learning how Object is a superclass of String, and how Integer is a superclass of Number, eg. if(time instanceof Integer x)
-learn about boilerplate code, and shorter code when it comes to using instanceof







Chapter 3:
learn about break, continue, and return statement 






Chapter 4
-review strip, trim, stripTrailing, and stripLeading
-learn indent() method one more time
-stripIndent() and the length of a string
-learn about whitespace and how it affects length of a string
-TranslatesEscapes and its affect on length when used with \\t or \t
-learn about String formatting, three ways: .format, .formatted, System.out.format
-learn about mutability and immutability between String and StringBuilder
-understanding the common and different methods between Strings and Stringbuilder
-how intern() plays an affect in the equality of Strings(==) and (.equals())
-learn how arrays are mutable objects







Chapter 5
-learn about varargs and how different types of callings work with it 
-private and protected access, and how it works with classes in the same package, and subclasses of other superclasses
-access modifiers in how they work with methods and variables
-learn about static imports, what is acceptable and not
-learn about unboxing and autoboxing, and how casting and numeric promotion is related to it
-learn the importance of numeric promotion when working with method calling

























